# Pre-commit hooks configuration for SprintSense
# This catches formatting, linting, and type errors before commits reach GitHub

repos:
  # General code formatting and basic checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
        exclude: ^.*\.(md|rst)$
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
        exclude: ^frontend/tsconfig.*\.json$
      - id: check-toml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python Backend Quality Checks
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        files: ^backend/
        language_version: python3.11

  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        files: ^backend/
        args: ["--profile", "black"]

  # Autopep8 disabled to avoid conflicts with Black formatter
  # - repo: https://github.com/pre-commit/mirrors-autopep8
  #   rev: v2.0.4
  #   hooks:
  #     - id: autopep8
  #       files: ^backend/
  #       args: [
  #         "--in-place",
  #         "--max-line-length=88",
  #         "--aggressive",
  #         "--aggressive"
  #       ]

  - repo: https://github.com/pycqa/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        files: ^backend/
        args: [
          "--max-line-length=88",
          "--extend-ignore=E203,W503"
        ]

  # Line length fixer for backend
  - repo: local
    hooks:
      - id: fix-line-lengths
        name: Fix line lengths (backend)
        entry: python3 scripts/fix-line-lengths.py
        language: system
        files: ^backend/.*\.py$
        pass_filenames: true

  # MyPy type checking for backend
  - repo: local
    hooks:
      - id: mypy-backend
        name: mypy (backend)
        entry: bash -c 'cd backend && poetry run mypy app --ignore-missing-imports'
        language: system
        files: ^backend/app/.*\.py$
        pass_filenames: false

  # Backend tests
  - repo: local
    hooks:
      - id: pytest-backend
        name: pytest (backend)
        entry: bash -c 'cd backend && poetry run pytest tests/ -q --tb=short'
        language: system
        files: ^backend/
        pass_filenames: false

  # Prettier formatting for frontend files (auto-fix)
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: Prettier (auto-fix)
        files: ^frontend/.*\.(ts|tsx|js|jsx|json|css|md)$
        args: ['--write']
        additional_dependencies: ['prettier@^3.6.0']

  # Frontend Quality Checks
  - repo: local
    hooks:
      - id: eslint-frontend
        name: ESLint (frontend)
        entry: bash -c 'cd frontend && npm run lint'
        language: system
        files: ^frontend/src/.*\.(ts|tsx)$
        pass_filenames: false

      - id: typescript-frontend
        name: TypeScript Check (frontend)
        entry: bash -c 'cd frontend && npm run type-check'
        language: system
        files: ^frontend/src/.*\.(ts|tsx)$
        pass_filenames: false

      # Vitest Tests temporarily disabled in pre-commit due to platform detection issue
      # Tests work fine when run directly: cd frontend && npm run test:run
      # Issue: pre-commit environment causes Rollup to detect wrong platform (x64 vs arm64)
      # TODO: Investigate pre-commit Node.js environment isolation
      # - id: vitest-frontend
      #   name: Vitest Tests (frontend)
      #   entry: bash -c 'cd frontend && npm run test:run'
      #   language: system
      #   files: ^frontend/
      #   pass_filenames: false

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        files: ^backend/
        args: ["-r", "-f", "json"]
        exclude: ^backend/tests/

  # Documentation checks
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        args: ['--fix']
        exclude: ^(CHANGELOG\.md|\.github/)

# Global settings
default_stages: [pre-commit, pre-push]
fail_fast: true
