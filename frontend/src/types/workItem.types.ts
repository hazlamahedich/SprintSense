/**
 * TypeScript types for work items.
 * Must match backend Pydantic schemas.
 */

export enum WorkItemType {
  STORY = 'story',
  BUG = 'bug',
  TASK = 'task',
}

export enum WorkItemStatus {
  BACKLOG = 'backlog',
  TODO = 'todo',
  IN_PROGRESS = 'in_progress',
  DONE = 'done',
  ARCHIVED = 'archived',
}

export enum SortOrder {
  ASC = 'asc',
  DESC = 'desc',
}

export interface WorkItem {
  id: string
  team_id: string
  sprint_id?: string
  author_id: string
  assignee_id?: string
  title: string
  description?: string
  type: WorkItemType
  status: WorkItemStatus
  priority: number
  story_points?: number
  completed_at?: Date | string
  source_sprint_id_for_action_item?: string
  created_at: Date | string
  updated_at?: Date | string
}

// Request/Response interfaces
export interface GetWorkItemsResponse {
  items: WorkItem[]
  total: number
  page: number
  size: number
}

export interface CreateWorkItemRequest {
  title: string
  description?: string
  type?: WorkItemType // Optional with 'story' default
  priority?: number // Optional - auto-calculated if not provided
  story_points?: number
  assignee_id?: string
  // teamId comes from URL path parameter
  // Other fields are auto-generated by backend
}

export interface UpdateWorkItemRequest {
  title?: string
  description?: string
  type?: WorkItemType
  status?: WorkItemStatus
  priority?: number
  assignee_id?: string
  story_points?: number
}

// Filtering and sorting
export interface WorkItemFilters {
  search?: string
  status?: string
  types?: WorkItemType[]
  statuses?: WorkItemStatus[]
  assignee_id?: string
}

export interface WorkItemSort {
  field: string
  order: SortOrder
}

export interface WorkItemPagination {
  page: number
  size: number
}

// API related interfaces
export interface ApiError {
  message: string
  details?: Record<string, unknown>
}

// Store state interfaces
export interface BacklogState {
  workItems: WorkItem[]
  loading: boolean
  error: ApiError | null
  totalCount: number
  filters: WorkItemFilters
  sort: WorkItemSort
  pagination: WorkItemPagination
}
